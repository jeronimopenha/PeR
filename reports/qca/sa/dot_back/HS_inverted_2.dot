digraph layout{
rankdir=TB; 

splines=ortho; 

node [style=filled shape=square fixedsize=true width=0.6];
0[label="4", fontsize=8, fillcolor="#a9ccde"];
1[label="", fontsize=8, fillcolor="#ffffff"];
2[label="", fontsize=8, fillcolor="#ffffff"];
3[label="", fontsize=8, fillcolor="#ffffff"];
4[label="", fontsize=8, fillcolor="#ffffff"];
5[label="", fontsize=8, fillcolor="#ffffff"];
6[label="12", fontsize=8, fillcolor="#a9ccde"];
7[label="", fontsize=8, fillcolor="#ffffff"];
8[label="0", fontsize=8, fillcolor="#a9ccde"];
9[label="", fontsize=8, fillcolor="#ffffff"];
10[label="", fontsize=8, fillcolor="#ffffff"];
11[label="", fontsize=8, fillcolor="#ffffff"];
12[label="8", fontsize=8, fillcolor="#a9ccde"];
13[label="", fontsize=8, fillcolor="#ffffff"];
14[label="1", fontsize=8, fillcolor="#a9ccde"];
15[label="13", fontsize=8, fillcolor="#a9ccde"];
16[label="9", fontsize=8, fillcolor="#a9ccde"];
17[label="6", fontsize=8, fillcolor="#a9ccde"];
18[label="5", fontsize=8, fillcolor="#a9ccde"];
19[label="10", fontsize=8, fillcolor="#a9ccde"];
20[label="14", fontsize=8, fillcolor="#a9ccde"];
21[label="", fontsize=8, fillcolor="#ffffff"];
22[label="", fontsize=8, fillcolor="#ffffff"];
23[label="11", fontsize=8, fillcolor="#a9ccde"];
24[label="", fontsize=8, fillcolor="#ffffff"];
25[label="", fontsize=8, fillcolor="#ffffff"];
26[label="2", fontsize=8, fillcolor="#a9ccde"];
27[label="3", fontsize=8, fillcolor="#a9ccde"];
28[label="7", fontsize=8, fillcolor="#a9ccde"];
29[label="15", fontsize=8, fillcolor="#a9ccde"];
30[label="", fontsize=8, fillcolor="#ffffff"];
31[label="", fontsize=8, fillcolor="#ffffff"];
32[label="", fontsize=8, fillcolor="#ffffff"];
33[label="", fontsize=8, fillcolor="#ffffff"];
34[label="", fontsize=8, fillcolor="#ffffff"];
35[label="", fontsize=8, fillcolor="#ffffff"];
edge [constraint=false, style=vis];
1 -> 0 [color="#cccccc"];
1 -> 7 [color="#cccccc"];
2 -> 1 [color="#cccccc"];
3 -> 2 [color="#cccccc"];
3 -> 9 [color="#cccccc"];
4 -> 3 [color="#cccccc"];
5 -> 4 [color="#cccccc"];
5 -> 11 [color="#cccccc"];
6 -> 7 [color="#cccccc"];
6 -> 0 [color="#cccccc"];
7 -> 13 [color="#cccccc"];
7 -> 8 [color="#cccccc"];
8 -> 9 [color="#cccccc"];
8 -> 2 [color="#cccccc"];
9 -> 15 [color="#cccccc"];
9 -> 10 [color="#cccccc"];
10 -> 11 [color="#cccccc"];
10 -> 4 [color="#cccccc"];
11 -> 17 [color="#cccccc"];
12 -> 6 [color="#cccccc"];
13 -> 12 [color="#cccccc"];
13 -> 19 [color="#cccccc"];
14 -> 8 [color="#cccccc"];
14 -> 13 [color="#cccccc"];
15 -> 14 [color="#cccccc"];
15 -> 21 [color="#cccccc"];
16 -> 10 [color="#cccccc"];
16 -> 15 [color="#cccccc"];
17 -> 16 [color="#cccccc"];
17 -> 23 [color="#cccccc"];
18 -> 19 [color="#cccccc"];
18 -> 12 [color="#cccccc"];
19 -> 25 [color="#cccccc"];
19 -> 20 [color="#cccccc"];
20 -> 21 [color="#cccccc"];
20 -> 14 [color="#cccccc"];
21 -> 27 [color="#cccccc"];
21 -> 22 [color="#cccccc"];
22 -> 23 [color="#cccccc"];
22 -> 16 [color="#cccccc"];
23 -> 29 [color="#cccccc"];
24 -> 18 [color="#cccccc"];
25 -> 24 [color="#cccccc"];
25 -> 31 [color="#cccccc"];
26 -> 20 [color="#cccccc"];
26 -> 25 [color="#cccccc"];
27 -> 26 [color="#cccccc"];
27 -> 33 [color="#cccccc"];
28 -> 22 [color="#cccccc"];
28 -> 27 [color="#cccccc"];
29 -> 28 [color="#cccccc"];
29 -> 35 [color="#cccccc"];
30 -> 31 [color="#cccccc"];
30 -> 24 [color="#cccccc"];
31 -> 32 [color="#cccccc"];
32 -> 33 [color="#cccccc"];
32 -> 26 [color="#cccccc"];
33 -> 34 [color="#cccccc"];
34 -> 35 [color="#cccccc"];
34 -> 28 [color="#cccccc"];
14 -> 8;
27 -> 26;
18 -> 12;
12 -> 6;
6 -> 0;
17 -> 16;
16 -> 15;
15 -> 14;
18 -> 19;
19 -> 20;
20 -> 14;
0 -> 27;
17 -> 23;
23 -> 29;
29 -> 28;
28 -> 27;
edge [constraint=true, style=invis];
0 -> 6 -> 12 -> 18 -> 24 -> 30;
1 -> 7 -> 13 -> 19 -> 25 -> 31;
2 -> 8 -> 14 -> 20 -> 26 -> 32;
3 -> 9 -> 15 -> 21 -> 27 -> 33;
4 -> 10 -> 16 -> 22 -> 28 -> 34;
5 -> 11 -> 17 -> 23 -> 29 -> 35;
rank = same { 0 -> 1 -> 2 -> 3 -> 4 -> 5;};
rank = same { 6 -> 7 -> 8 -> 9 -> 10 -> 11;};
rank = same { 12 -> 13 -> 14 -> 15 -> 16 -> 17;};
rank = same { 18 -> 19 -> 20 -> 21 -> 22 -> 23;};
rank = same { 24 -> 25 -> 26 -> 27 -> 28 -> 29;};
rank = same { 30 -> 31 -> 32 -> 33 -> 34 -> 35;};
}
