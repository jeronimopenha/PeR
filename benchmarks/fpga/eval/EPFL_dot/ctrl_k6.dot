digraph G {
    "opcode0" -> "sel_reg_dst0";
    "opcode1" -> "sel_reg_dst0";
    "opcode2" -> "sel_reg_dst0";
    "opcode3" -> "sel_reg_dst0";
    "opcode4" -> "sel_reg_dst0";
    "opcode0" -> "sel_reg_dst1";
    "opcode2" -> "sel_reg_dst1";
    "opcode1" -> "sel_reg_dst1";
    "opcode3" -> "sel_reg_dst1";
    "opcode4" -> "sel_reg_dst1";
    "opcode0" -> "sel_alu_opB0";
    "opcode2" -> "sel_alu_opB0";
    "opcode1" -> "sel_alu_opB0";
    "opcode3" -> "sel_alu_opB0";
    "opcode4" -> "sel_alu_opB0";
    "opcode0" -> "sel_alu_opB1";
    "opcode1" -> "sel_alu_opB1";
    "opcode2" -> "sel_alu_opB1";
    "opcode3" -> "sel_alu_opB1";
    "opcode4" -> "sel_alu_opB1";
    "opcode3" -> "alu_op0";
    "opcode0" -> "alu_op0";
    "opcode4" -> "alu_op0";
    "new_n39_" -> "alu_op0";
    "opcode2" -> "alu_op0";
    "op_ext1" -> "new_n39_";
    "opcode0" -> "new_n39_";
    "op_ext0" -> "new_n39_";
    "opcode4" -> "new_n39_";
    "opcode3" -> "new_n39_";
    "opcode1" -> "new_n39_";
    "op_ext1" -> "alu_op1";
    "opcode4" -> "alu_op1";
    "opcode2" -> "alu_op1";
    "opcode3" -> "alu_op1";
    "opcode1" -> "alu_op1";
    "opcode0" -> "alu_op2";
    "opcode1" -> "alu_op2";
    "opcode2" -> "alu_op2";
    "opcode3" -> "alu_op2";
    "opcode4" -> "alu_op2";
    "opcode0" -> "alu_op_ext0";
    "opcode1" -> "alu_op_ext0";
    "opcode2" -> "alu_op_ext0";
    "opcode3" -> "alu_op_ext0";
    "opcode4" -> "alu_op_ext0";
    "opcode0" -> "alu_op_ext1";
    "opcode3" -> "alu_op_ext1";
    "opcode2" -> "alu_op_ext1";
    "opcode4" -> "alu_op_ext1";
    "opcode1" -> "alu_op_ext1";
    "opcode0" -> "alu_op_ext2";
    "opcode2" -> "alu_op_ext2";
    "opcode3" -> "alu_op_ext2";
    "opcode1" -> "alu_op_ext2";
    "opcode4" -> "alu_op_ext2";
    "opcode0" -> "alu_op_ext3";
    "opcode4" -> "alu_op_ext3";
    "opcode2" -> "alu_op_ext3";
    "opcode1" -> "alu_op_ext3";
    "opcode3" -> "alu_op_ext3";
    "opcode0" -> "halt";
    "opcode1" -> "halt";
    "opcode2" -> "halt";
    "opcode3" -> "halt";
    "opcode4" -> "halt";
    "opcode0" -> "reg_write";
    "opcode1" -> "reg_write";
    "opcode4" -> "reg_write";
    "opcode2" -> "reg_write";
    "opcode3" -> "reg_write";
    "jump" -> "sel_pc_opA";
    "opcode0" -> "sel_pc_opA";
    "opcode3" -> "jump";
    "opcode4" -> "jump";
    "opcode2" -> "jump";
    "opcode0" -> "sel_pc_opB";
    "jump" -> "sel_pc_opB";
    "opcode0" -> "beqz";
    "opcode1" -> "beqz";
    "opcode4" -> "beqz";
    "opcode3" -> "beqz";
    "opcode2" -> "beqz";
    "opcode1" -> "bnez";
    "opcode4" -> "bnez";
    "opcode2" -> "bnez";
    "opcode3" -> "bnez";
    "opcode0" -> "bnez";
    "opcode4" -> "bgez";
    "opcode1" -> "bgez";
    "opcode2" -> "bgez";
    "opcode3" -> "bgez";
    "opcode0" -> "bgez";
    "opcode0" -> "bltz";
    "opcode4" -> "bltz";
    "opcode2" -> "bltz";
    "opcode3" -> "bltz";
    "opcode1" -> "bltz";
    "op_ext0" -> "Cin";
    "opcode1" -> "Cin";
    "opcode4" -> "Cin";
    "opcode0" -> "Cin";
    "opcode2" -> "Cin";
    "opcode3" -> "Cin";
    "new_n39_" -> "invA";
    "new_n57_" -> "invA";
    "opcode2" -> "invA";
    "opcode1" -> "new_n57_";
    "op_ext0" -> "new_n57_";
    "opcode4" -> "new_n57_";
    "opcode2" -> "new_n57_";
    "opcode0" -> "new_n57_";
    "opcode3" -> "new_n57_";
    "op_ext1" -> "invB";
    "opcode4" -> "invB";
    "opcode2" -> "invB";
    "opcode3" -> "invB";
    "opcode1" -> "invB";
    "Cin" -> "invB";
    "opcode2" -> "mem_write";
    "opcode3" -> "mem_write";
    "opcode0" -> "mem_write";
    "opcode1" -> "mem_write";
    "opcode4" -> "mem_write";
    "opcode1" -> "sel_wb";
    "opcode2" -> "sel_wb";
    "opcode3" -> "sel_wb";
    "opcode0" -> "sel_wb";
    "opcode4" -> "sel_wb";
    "sel_reg_dst0" -> "out:sel_reg_dst0";
    "sel_reg_dst1" -> "out:sel_reg_dst1";
    "sel_alu_opB0" -> "out:sel_alu_opB0";
    "sel_alu_opB1" -> "out:sel_alu_opB1";
    "alu_op0" -> "out:alu_op0";
    "alu_op1" -> "out:alu_op1";
    "alu_op2" -> "out:alu_op2";
    "alu_op_ext0" -> "out:alu_op_ext0";
    "alu_op_ext1" -> "out:alu_op_ext1";
    "alu_op_ext2" -> "out:alu_op_ext2";
    "alu_op_ext3" -> "out:alu_op_ext3";
    "halt" -> "out:halt";
    "reg_write" -> "out:reg_write";
    "sel_pc_opA" -> "out:sel_pc_opA";
    "sel_pc_opB" -> "out:sel_pc_opB";
    "beqz" -> "out:beqz";
    "bnez" -> "out:bnez";
    "bgez" -> "out:bgez";
    "bltz" -> "out:bltz";
    "jump" -> "out:jump";
    "Cin" -> "out:Cin";
    "invA" -> "out:invA";
    "invB" -> "out:invB";
    "mem_write" -> "out:mem_write";
    "sel_wb" -> "out:sel_wb";
}
